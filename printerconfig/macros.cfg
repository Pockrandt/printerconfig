[gcode_macro PRINT_START]
gcode:
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(235)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(235)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(200)|float %}
        
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}
    
    {% set X_START = 20.0|default(2.0)|float %}
    {% set Y_START = 10.0|default(10.0)|float %}
    
    {% set PRIMER_WIDTH = 1 * NOZZLE %}
    {% set PRIMER_HEIGHT = 0.5 * NOZZLE %}
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
    {% set PRIMER_VOL = PRIMER_SECT * (Y_MAX - 3 - Y_START) * 2 %}
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0) * ( FILADIA / 2.0) %}
    {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}
    
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    {% set MATERIAL = params.MATERIAL|default("PLA")|string %}

    _SET_PA MATERIAL={MATERIAL}
    
    STATUS_HEATING
    RESPOND PREFIX= MSG="Waiting for bed temp"
    M117  Waiting for bed temp
    M107                                #turn off parts fan
    M104 S{EXTRUDER_TEMP|float*0.7} T0
    M190 S{BED_TEMP}
    
    _beep_caution_printer_moving
    G4 P3000

    G32

    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1 probe_dock_enable=1 variable_led_enable=TRUE
    BED_MESH_CALIBRATE

    G1 X{X_START} Y{Y_START-5} Z{PRIMER_HEIGHT} F6000.0
 
    STATUS_HEATING
    RESPOND PREFIX= MSG="Waiting for extruder temp..."
    M117  Waiting for extruder temp
    M109 S{EXTRUDER_TEMP} T0
    
    STATUS_CLEANING
    RESPOND PREFIX= MSG="Moving to prime position"
    M117 Moving to prime position
    G90
    G92 E0
    G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F6000.0
    G1 X{X_START} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH} F2000.0
    G1 X{X_START + PRIMER_WIDTH} Y{Y_MAX - 3 - Y_START} Z{PRIMER_HEIGHT}
    G1 X{X_START + PRIMER_WIDTH} Y{Y_START} Z{PRIMER_HEIGHT} E{FILA_LENGTH*2} F2000.0
    G92 E0
    G1 Z2.0 F600
    G1 Z0.2 F600
    G1 Z2.0 F600
    # PURGE
    
    STATUS_PRINTING
    
[gcode_macro PRINT_END]
gcode:
    {% set z = params.Z|default(1)|int %}   ; z hop amount

    M400                             ; wait for buffer to clear
    G91                              ; !relative positioning
    G1 E-0.2 F{30 * 60} 
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
        G1 Z{z} F900                                                                     ; raise Z up by z hop amount
    {% endif %}
    G90                              ; absolute positioning

    _beep_done
    _TOOLHEAD_PARK_PAUSE_CANCEL
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan

    M400                             ; Finish Moves
    M221 S100                        ; reset flow to 100%
    M220 S100                        ; reset speed to 100%

    M117 Finished!
    STATUS_READY



[gcode_macro _PURGE]
gcode: 
  {% set purge_temp_min = printer["gcode_macro _PRINTER_SETTINGS"].purge_temp_min|default(260)%}
  {% set purge_len = printer["gcode_macro _PRINTER_SETTINGS"].purge_len|default(20)%}
  {% set purge_spd = printer["gcode_macro _PRINTER_SETTINGS"].purge_spd|default(100)%}
  {% set purge_ret = printer["gcode_macro _PRINTER_SETTINGS"].purge_ret|default(12)%}
  {% set ooze_dwell = printer["gcode_macro _PRINTER_SETTINGS"].ooze_dwell|default(3)%}

  ## Move to bucket 
  G1 X{start_x} Y{start_y} F6000 
  G1 Z{start_z} F1500 

  {% if printer.extruder.temperature >= purge_temp_min %}
    M83      ; relative mode
    G1 E{purge_len} F{purge_spd}
    G1 E-{purge_ret} F{purge_spd * 5}
    G4 P{ooze_dwell * 1000}
    G92 E0   ; reset extruder
  {% else %}
    RESPOND TYPE=error MSG='Extruder not hot enough'
  {% endif %}


[gcode_macro CLEAN_NOZZLE]
gcode: 
  {% if "xyz" not in printer.toolhead.homed_axes %}
     G28 
  {% endif %}

  {% set start_x = printer["gcode_macro _PRINTER_SETTINGS"].brush_start_x|default(55)%}
  {% set start_y = printer["gcode_macro _PRINTER_SETTINGS"].brush_start_y|default(10)%}
  {% set start_z = printer["gcode_macro _PRINTER_SETTINGS"].brush_start_z|default(20)%}
  {% set wipe_dist = printer["gcode_macro _PRINTER_SETTINGS"].brush_wipe_dist|default(-50)%}
  {% set wipe_qty = printer["gcode_macro _PRINTER_SETTINGS"].brush_wipe_qty|default(5)%}
  {% set wipe_spd = printer["gcode_macro _PRINTER_SETTINGS"].brush_wipe_spd|default(100)%}

  {% set initial_z = printer.toolhead.position.z %}

  G90
  ## Move to start position 
  G1 X{start_x} Y{start_y} F6000 
  G1 Z{start_z} F1500 
  ## Wipe nozzle 
  {% for wipes in range(1, (wipe_qty + 1)) %}
     G1 X{start_x + wipe_dist} F{wipe_spd * 60}
     G1 X{start_x} F{wipe_spd * 60} {% endfor %} 
  ## Raise nozzle 
  G91
  G1 Z{initial_z} F1500 



[gcode_macro PARK_END]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x/2} Y{th.axis_maximum.y - 5} F3600 

[gcode_macro PARK_FRONT]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x/2} Y{th.axis_minimum.y + 5} F3600 

# Qoute:
# > this is where the awkwardness of JINJA (the shit in the {}) being a preprocessor shows up
# > the jinja stuff gets executed first, before any of the actual gcode does...
# so 2 macros are needed
[gcode_macro SHUTDOWN_PRINTER]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
      _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}
    TURN_OFF_HEATERS
    M84
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=49
    STATUS_OFF
    G4 P5000
    _PRINTER_POWEROFF
    

[gcode_macro _PRINTER_POWEROFF]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}
##################

[gcode_macro HEATSOAK]
gcode:
    STATUS_HEATING
    {% set DWELL = params.DWELL|default(600000)|int %}             # Heatsoaking duration, default is 10 minutes (600000 milliseconds)
    G4 P{DWELL}
    _beep_preheated

[gcode_macro _SET_PA]
gcode:
    {% set MATERIAL = params.MATERIAL|default("PLA")|string|upper %}
    {% set PLA_PA = printer["gcode_macro _PRINTER_SETTINGS"].pla_pa|default(0) %}
    {% set PET_PA = printer["gcode_macro _PRINTER_SETTINGS"].petg_pa|default(0) %}
    {% set ABS_PA = printer["gcode_macro _PRINTER_SETTINGS"].abs_pa|default(0) %}

    {% set PLA_ZA = printer["gcode_macro _PRINTER_SETTINGS"].pla_za|default(0) %}
    {% set PET_ZA = printer["gcode_macro _PRINTER_SETTINGS"].petg_za|default(0) %}
    {% set ABS_ZA = printer["gcode_macro _PRINTER_SETTINGS"].abs_pa|default(0) %}

    {% if MATERIAL == "PLA" %}
      SET_PRESSURE_ADVANCE ADVANCE={PLA_PA}
      SET_GCODE_OFFSET Z_ADJUST={PLA_ZA} MOVE=1
    {% elif MATERIAL == "PETG" %}
      SET_PRESSURE_ADVANCE ADVANCE={PET_PA}
      SET_GCODE_OFFSET Z_ADJUST={PET_ZA} MOVE=1
    {% elif MATERIAL == "ABS" %}
      SET_PRESSURE_ADVANCE ADVANCE={ABS_PA}
      SET_GCODE_OFFSET Z_ADJUST={ABS_ZA} MOVE=1
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE=0
    {% endif %}

##################################################
################## G CODES ##############
##################################################
[gcode_macro G32]
gcode:
  BED_MESH_CLEAR

  {% if 'X' in params %}
    G28 X
  {% endif %}
  
  {% if 'Y' in params %}
    G28 Y
  {% endif %}

  {% if "xy" not in printer.toolhead.homed_axes %}
      G28 X
      G28 Y
  {% endif %}

  {% if printer["gcode_macro Z_TILT_ADJUST"] is defined %}
    {% if "z" not in printer.toolhead.homed_axes %}
      G28 Z
    {% endif %}
    Z_TILT_ADJUST
  {% else %}
    G28 Z
  {% endif %}


# source: https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
# date copy : 2023-04-14
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro M600]
gcode:
    _beep_filament_change
    PAUSE X=10 Y=10 Z_MIN=50

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
    {% set pa = params.K|float %}
    SET_PRESSURE_ADVANCE ADVANCE={pa}
