# SET_LED LED=<config_name> RED=1 GREEN=0 BLUE=0 TRANSMIT=1
# This command should turn the entire strip red. If the strip turns green, then it uses a GRB color order.
[gcode_macro SET_LED_LENGTH]
description: SET_LED_LENGTH LED=<config_name> RED=<value> GREEN=<value> BLUE=<value> WHITE=<value> INDEX=<indexToStart> COUNT=<numberOfPixels>
gcode: 
    {% set ledName= params.LED|default(0)|string %}
    {% set colorRed= params.RED|default(0)|float %}
    {% set colorGreen= params.GREEN|default(0)|float %}
    {% set colorBlue= params.BLUE|default(0)|float %}
    {% set colorWhite= params.WHITE|default(0)|float %}
    {% set indexCount= params.INDEX|default(0)|int %}
    {% set pixelCount= params.COUNT|default(0)|int %}
    
    {% for index in range(indexCount,indexCount + pixelCount) %}
        SET_LED LED={ledName} RED={colorRed} GREEN={colorGreen} BLUE={colorBlue} WHITE={colorWhite} INDEX={index} TRANSMIT={ '1' if index==(indexCount+pixelCount-1) else '0' }
    {% endfor %}

[gcode_macro _SET_CASE_LEDS]
description: Helper: Set the color for a segment of the case led strip.
gcode:
    {% set r = params.R|default(0)|float %}
    {% set g = params.G|default(0)|float %}
    {% set b = params.B|default(0)|float %}
    {% set w = params.W|default(0)|float %}
    {% set idx = params.IDX|default(1)|int %}
    {% set cnt = printer.configfile.config["neopixel case_leds"].chain_count|default(28)|int %}
        
    SET_LED_LENGTH LED=case_leds RED={r} GREEN={g} BLUE={b} WHITE={w} INDEX={idx} COUNT={cnt}


[gcode_macro CASELIGHT]
description: Toggle case light
gcode:
  {% set current_brightness = printer["neopixel case_leds"].color_data[0][3]|default(0)|float %}
  {% if current_brightness > 0.0 %}
      _CASELIGHT_ON
      UPDATE_DELAYED_GCODE ID=motion_timeout DURATION=0
  {% else %}
      _CASELIGHT_OFF
  {% endif %}

[gcode_macro _CASELIGHT_ON]
description: Helper: Turns case light on and starts countdown
gcode:
  _SET_CASE_LEDS R=0.5 G=0.5 B=0.5 W=0.5


[gcode_macro _CASELIGHT_OFF]
description: Helper: Light off
gcode:
  _SET_CASE_LEDS R=0 G=0 B=0 W=0



#####################################################################
#   Motion Lights
#####################################################################

[gcode_button am312]
#pin: ^rpi:gpio24  # pin where the signal wire of the chip is connected
press_gcode:
  _motion_detected motion=1
release_gcode:

[gcode_macro _motion_cfg]
variable_on_motion_macro_idle:     '_SET_CASE_LEDS R=0.1  G=0.1   B=0.1   W=0.1'
variable_on_motion_macro_printing: '_SET_CASE_LEDS R=0.5  G=0.5   B=0.5   W=0.5'
variable_on_timeout_macro_idle:    '_SET_CASE_LEDS R=0    G=0     B=0     W=0.0'
variable_on_timeout_macro_printing:'_SET_CASE_LEDS R=0.01 G=0.005 B=0.005 W=0.01'
variable_no_motion_timer: 30
variable_delay: 250         ; Debounce delay in miliseconds
variable_debounce: 0        ; <-- DO NOT CHANGE THIS VARIABLE
variable_state:    0        ; <-- DO NOT CHANGE THIS VARIABLE
variable_bounce:   0        ; <-- DO NOT CHANGE THIS VARIABLE
variable_rebootdwell: 1     ; <-- DO NOT CHANGE THIS VARIABLE
gcode:





[gcode_macro _motion_detected]
description: Motion detected
gcode:
  {% set motioncfg = printer['gcode_macro _motion_cfg'] %}

  {% if motioncfg.rebootdwell == 1 %}
   G4 P100
   SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=rebootdwell VALUE=0
  {% endif %}

  {% if motioncfg.debounce == 0 %}

      {% if printer.virtual_sdcard.is_active == True %}
          {motioncfg.on_motion_macro_printing}
      {% else %}
          {motioncfg.on_motion_macro_idle}
      {% endif %}

      SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=debounce VALUE=1
      SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=state VALUE=0    
      SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=bounce VALUE=0    
      UPDATE_DELAYED_GCODE ID=motion_debounce DURATION={(motioncfg.delay / 1000)|float}
      UPDATE_DELAYED_GCODE ID=motion_timeout DURATION={motioncfg.no_motion_timer}
  {% else %}
      SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=bounce VALUE=0
      UPDATE_DELAYED_GCODE ID=motion_timeout DURATION={motioncfg.no_motion_timer}
  {% endif %}


[delayed_gcode motion_timeout]
gcode:
  {% set motioncfg = printer['gcode_macro _motion_cfg'] %}
  {% if printer.virtual_sdcard.is_active == True %}
      {motioncfg.on_timeout_macro_printing}
  {% else %}
      {motioncfg.on_timeout_macro_idle}
  {% endif %} 


[delayed_gcode motion_debounce]
gcode:
  {% set motioncfg = printer['gcode_macro _motion_cfg'] %}    
  {% if motioncfg.bounce != motioncfg.state %}
    {% if motioncfg.bounce == 1 %}
        SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=state VALUE=1
        SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=bounce VALUE=1
    {% endif %}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=_motion_cfg VARIABLE=debounce VALUE=0


